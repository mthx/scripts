#!/usr/bin/env python

"""
Script to give an alternate branch or trunk when in an SVN
working copy.
"""

import os
import re
import sys
from subprocess import Popen, PIPE
from xml.dom import minidom


def get_svn_url_or_exit():
    command = ["svn", "--non-interactive", "--xml", "info"]
    xml, error = Popen(command, stdout=PIPE, stderr=PIPE).communicate()
    if error.strip():
        print >> sys.stderr, error
        sys.exit(1)
    return minidom.parseString(xml).getElementsByTagName("url")[0].firstChild.data


if __name__ == "__main__":
    args = sys.argv[1:]
    is_trunk = os.path.basename(sys.argv[0]) == "trunk"
    url = get_svn_url_or_exit()

    # Special case: just output the current branch when no args are given.
    if len(args) == 0 and not is_trunk:
        print url

    # Unify mid and end-of-path cases, revert on output.
    if not url.endswith("/"):
        url = url + "/"

    replace = "/branches/[^/]+/" if "/branches/" in url else "/trunk/"
    if len(args) == 0 and is_trunk:
        replacements = ["/trunk/"]
    else:
        replacements = ["/branches/" + r + "/" for r in args]

    for r in replacements:
        rurl = re.sub(replace, r, url, count=1)
        # Fixup earlier modification.
        if rurl.endswith("/"):
            rurl = rurl[0:-1]
        print rurl
